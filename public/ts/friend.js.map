{"version":3,"file":"friend.js","sources":["../../resources/ts/utils/Util.ts","../../resources/ts/utils/Storage.ts","../../resources/ts/utils/Service.ts","../../resources/ts/utils/Firebase.ts","../../resources/ts/Friend.ts"],"sourcesContent":["export default class Util {\n    public static SPEED: number = 200;\n    public static BOARD_COLS: number = 30;\n    public static BOARD_LINES: number = 30;\n    public static KEY_PAUSE: number = 32;\n    public static KEY_UP: number = 38;\n    public static KEY_LEFT: number = 37;\n    public static KEY_RIGHT: number = 39;\n    public static KEY_DOWN: number = 40;\n    public static COLOR_SNAKE: string = '#10A9E7';\n    public static COLOR_BLANK: string = '#fff';\n    public static COLOR_BOARD: string = '#fff';\n    public static COLOR_WALL: string = '#696a6b';\n\n    constructor () {}\n\n    /**\n     * Receive two number to define limit of random.\n     * @param  {integer} min\n     * @param  {integer} max\n     * @return {integer}\n     */\n     rand (min : number, max : number): number {\n         return Math.floor(Math.random() * (max - min) + min);\n     }\n\n    /**\n     * Receive array and field used to orde this array.\n     * @param  {array} array\n     * @param  {string} field\n     * @return {integer}\n     */\n     compare(array : any, field : string) : any {\n         return array.sort((a, b) => a.field !== b.field ? a.field < b.field ? -1 : 1 : 0);\n     }\n\n    /**\n     * Method to redirect to other url.\n     * @param  {string} url\n     * @return {void}\n     */\n     redirect(url : string) : void {\n         window.location.href = './' + url + '.html';\n     }\n\n      /**\n    * Check if browser is connected to internet.\n    * @return {boolean}\n    */\n    online(): boolean {\n        return navigator.onLine;\n    }\n\n    /**\n    * Listen for changes to network connectivity:\n    * @return {boolean}\n    */\n    connection(): any {\n        return navigator.connection;\n    }\n\n    /**\n     * Method provides information about the system's battery, returns a battery promise.\n     * @return {any}\n     */\n    battery(): any {\n        const batteryInfo = {};\n        navigator.getBattery().then(function(battery) {\n            batteryInfo = battery;\n            battery.addEventListener('chargingchange', function() {\n                batteryInfo = battery;\n            });\n        });\n        return batteryInfo;\n    }\n\n    /**\n     * Listen for changes to responsiveness.\n     * @return {void}\n     */\n    orientation(): void {\n        console.log(\"ORIENTATION\");\n        media.addListener(mql => console.log(mql.matches));\n\n        // Orientation of device changes.\n        window.addEventListener('orientationchange', e => {\n            console.log(screen.orientation.angle)\n        });\n    }\n }\n","export default class Storage {\n\n    constructor () {\n\n    }\n\n    /**\n     * Save items in browser storage.\n     * @param {string} name\n     * @param {string} value\n     * @return {void}\n     */\n    addItem(name : string, value : any): void {\n        localStorage.setItem(name, value);\n    }\n\n    /**\n     * Get Item in storage.\n     * @param  {string} item\n     * @return {string}\n     */\n    getItem(item : string): string {\n        return localStorage.getItem(item);\n    }\n\n    /**\n     * Remove Item in storage.\n     * @param {string} item [description]\n     * @return {void}\n     */\n    removeItem(item: string): void{\n        localStorage.removeItem(item);\n    }\n}\n","import Storage from './Storage';\n\nexport default class Service {\n    private storage: any;\n\n    constructor () {\n        this.storage = new Storage();\n    }\n\n    /**\n    * Method to return avatar based in email.\n    * @param  {String} hash\n    * @param  {Number} size\n    * @return {String}\n    */\n    gravatar(hash : string, size : number = 200): any {\n        return 'http://www.gravatar.com/avatar/' + hash + '.jpg?s=' + size;\n    }\n\n    /**\n     * Check if user have info in storage.\n     * @return {boolean}\n     */\n     checkAuth(): boolean{\n         var exists = true;\n         if (localStorage.getItem('email') === null) {\n             exists = false;\n         }\n         return exists;\n     }\n\n    /**\n     * Remove user from storage.\n    * @return void\n    */\n    logout(): void {\n        this.storage.removeItem('email');\n    }\n}\n","export default class Firebase {\n\n    constructor () {\n        if (!firebase.apps.length) {\n            firebase.initializeApp({\n                apiKey: \"AIzaSyCnYJD53OX0pUMHIGvh_dHQZDJPpEXI_Dk\",\n                authDomain: \"snake-c8e67.firebaseapp.com\",\n                databaseURL: \"https://snake-c8e67.firebaseio.com\",\n                projectId: \"snake-c8e67\",\n                storageBucket: \"snake-c8e67.appspot.com\",\n                messagingSenderId: \"247524654285\"\n            });\n        }\n    }\n\n    /**\n     * Push in Firabase\n     * @param {string} node\n     * @param {any}    list\n     */\n    push(node: string, list : any): void {\n        firebase.database().ref(node).set(list);\n    }\n\n    /**\n     * Set in Firabase\n     * @param {string} node\n     * @param {any}    list\n     */\n    set(node: string, list : any): void {\n        firebase.database().ref(node).set(list);\n    }\n\n    /**\n     * Updated in Firabase\n     * @param {string} node\n     * @param {any}    list\n     */\n    update(node: string, list : any): void {\n        firebase.database().ref(node).update(list);\n    }\n\n    /**\n     * Get All Items in Firebase\n     * @param  {string} node\n     * @return {any}\n     */\n    all(node: string): any {\n        var promise = new Promise((resolve, reject) => {\n            firebase.app().database().ref(node).on(\"value\", function(snapshot) {\n                resolve(snapshot.val());\n            });\n        });\n        return promise;\n    }\n\n    destroy(node: string, key: any): void {\n        firebase.database().ref(node).child(key).remove();\n    }\n}\n","import Util from './utils/Util';\nimport Service from './utils/Service';\nimport Firebase from './utils/Firebase';\nimport Storage from './utils/Storage';\n\nclass Friend {\n    private util: any;\n    private service: any;\n    private storage: any;\n    private firebase: any;\n    private friends: any = {};\n\n    constructor() {\n        this.util = new Util();\n        this.service = new Service();\n        this.storage = new Storage();\n        this.firebase = new Firebase();\n\n        // Check if user is Auth\n        if (!this.service.checkAuth()) {\n            this.util.redirect('index');\n        }\n\n        // Check if user hava internet connection.\n        if (this.util.online) {\n            this.firebase.all('friends/' + this.storage.getItem('id')).then(response => {\n                this.friends = response;\n                // Updated storage with info in Firebase.\n                this.storage.addItem('friends', JSON.stringify(this.friends));\n                this.view();\n            });\n        } else {\n            this.friends = JSON.parse(this.service.getItem('friends'));\n            this.view();\n        }\n\n        this.addEventListeners();\n    }\n\n    view(): void {\n        console.log(\"VIEW\");\n        console.log(this.friends);\n    }\n\n    addEventListeners(): void {\n        // Logout\n        let logout = document.querySelector('#logout');\n        logout.addEventListener('click', evt => {\n            evt.preventDefault();\n            this.service.logout();\n            this.util.redirect('index');\n        });\n    }\n}\n\nnew Friend();\n"],"names":[],"mappings":"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"}